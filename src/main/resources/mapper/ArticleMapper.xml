<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.calligraphy.dao.ArticleMapper">
  <resultMap id="BaseResultMap" type="com.calligraphy.dto.Article">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="source" jdbcType="VARCHAR" property="source" />
    <result column="author" jdbcType="VARCHAR" property="author" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="createBy" jdbcType="INTEGER" property="createby" />
  </resultMap>
  <sql id="Base_Column_List">
    id, title, type, source, author, createTime, createBy
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <insert id="insert" parameterType="com.calligraphy.dto.Article">
    insert into article (id, title, type, 
      source, author, createTime, 
      createBy, content)
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, 
      #{source,jdbcType=VARCHAR}, #{author,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}, 
      #{createby,jdbcType=INTEGER}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.calligraphy.dto.Article">
    insert into article
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="source != null">
        source,
      </if>
      <if test="author != null">
        author,
      </if>
      <if test="createtime != null">
        createTime,
      </if>
      <if test="createby != null">
        createBy,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="source != null">
        #{source,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="createby != null">
        #{createby,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.calligraphy.dto.Article">
    update article
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="source != null">
        source = #{source,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="createby != null">
        createBy = #{createby,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.calligraphy.dto.Article">
    update article
    set title = #{title,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      source = #{source,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      createBy = #{createby,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.calligraphy.dto.Article">
    update article
    set title = #{title,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      source = #{source,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      createBy = #{createby,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="articleList" resultType="com.calligraphy.dto.Article">
    SELECT id,title,author,left(jianjie, 50) as content FROM `article` WHERE del_flag=0
    <if test="type != null">
      and type = #{type}
    </if>
    <if test="keyword != null and keyword != ''">
      and title LIKE CONCAT('%',#{keyword},'%' )
    </if>
    ORDER BY create_date desc LIMIT #{start},#{end}
  </select>

  <select id="articleListcount" resultType="java.lang.Integer">
    SELECT count(1) FROM
    (SELECT id FROM `article` WHERE del_flag=0
    <if test="type != null">
      and type = #{type}
    </if>
    <if test="keyword != null and keyword != ''">
      and title LIKE CONCAT('%',#{keyword},'%' )
    </if>
    ) tmp
  </select>

  <select id="queryByid" resultType="com.calligraphy.dto.Article">
SELECT id, title, author, content, ( SELECT COUNT(*) FROM artilce_praisenum WHERE articleid = #{articleId} ) AS praisenum,
( SELECT COUNT(*) FROM artilce_readnum WHERE articleid = #{articleId} ) AS rednum,
( SELECT COUNT(*) FROM artilce_reportednum WHERE articleid = #{articleId} ) AS reportednum
FROM `article` WHERE id = #{articleId};
  </select>

  <insert id="saveRead">
  insert into artilce_readnum (articleid,userid,createtime)
    values (#{articleId,jdbcType=VARCHAR},#{userId,jdbcType=VARCHAR},now())
  </insert>

  <insert id="savePraise">
    insert into artilce_praisenum (articleid,userid,createtime)
    values (#{articleId,jdbcType=VARCHAR},#{userId,jdbcType=VARCHAR},now())
  </insert>

  <insert id="saveReported">
    insert into artilce_reportednum (articleid,userid,createtime)
    values (#{articleId,jdbcType=VARCHAR},#{userId,jdbcType=VARCHAR},now())
</insert>
</mapper>